var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.103,1,0.443]],["body/components/AppComponent.html",[0,0.159,1,0.599,2,0.437,3,0.805,4,0.622,5,0.622,6,0.622,7,0.291,8,1.282,9,0.622,10,2.489,11,2.489,12,1.557,13,1.595,14,2.489,15,0.947,16,2.489,17,0.947,18,2.489,19,0.36,20,1.519,21,3.969,22,3.969,23,3.969,24,2.994,25,0.982,26,3.818,27,1.123,28,2.994,29,1.359,30,1.309,31,1.635,32,1.635,33,2.489,34,1.334,35,2.489,36,2.163,37,1.598,38,2.489,39,1.123,40,0.068,41,0.738,42,1.805,43,1.805,44,1.635,45,2.489,46,2.127,47,1.635,48,3.368,49,1.635,50,2.489,51,1.615,52,0.664,53,1.635,54,1.334,55,0.742,56,2.842,57,1.635,58,1.334,59,2.641,60,2.163,61,2.641,62,2.641,63,2.641,64,1.635,65,2.489,66,1.078,67,1.635,68,0.437,69,1.05,70,1.05,71,0.876,72,1.05,73,2.489,74,1.05,75,1.635,76,2.489,77,2.489,78,1.282,79,1.635,80,1.635,81,2.489,82,1.635,83,2.489,84,1.359,85,1.635,86,1.635,87,1.05,88,0.347,89,0.36,90,2.363,91,1.635,92,1.635,93,1.635,94,1.635,95,1.282,96,3.013,97,0.876,98,1.334,99,1.952,100,0.805,101,1.282,102,1.635,103,1.635,104,1.635,105,1.635,106,1.952,107,1.635,108,1.635,109,1.635,110,1.635,111,1.635,112,1.635,113,2.641,114,1.598,115,1.952,116,1.952,117,1.952,118,0.437,119,0.947,120,0.947,121,0.947,122,1.282,123,0.622,124,0.797,125,0.622,126,0.291,127,0.622,128,0.291,129,0.523,130,0.437,131,0.622,132,0.291,133,0.622,134,0.291,135,0.622,136,0.291,137,0.622,138,0.033,139,0.033]],["title/modules/AppModule.html",[140,1.122,141,1.333]],["body/modules/AppModule.html",[1,0.848,2,0.658,3,0.658,7,0.438,40,0.068,55,0.737,66,1.525,68,0.658,88,0.344,89,0.737,100,0.658,118,0.658,126,0.782,128,0.782,129,0.789,130,0.894,132,0.782,134,0.782,136,0.782,138,0.045,139,0.045,140,1.509,141,2.619,142,1.111,143,2.978,144,1.713,145,2.148,146,1.932,147,1.932,148,1.932,149,2.623,150,1.932,151,1.582,152,2.464,153,3.345,154,2.623,155,1.582,156,3.345,157,2.464,158,3.345,159,3.345,160,3.345,161,1.582,162,3.345,163,1.932,164,1.932,165,2.464,166,2.464,167,2.464,168,2.464,169,1.582,170,2.464,171,1.582,172,2.464]],["title/components/BoardComponent.html",[0,0.103,126,0.443]],["body/components/BoardComponent.html",[0,0.141,1,0.194,2,0.946,3,0.292,4,0.415,5,0.415,6,0.415,7,0.194,9,0.415,12,1.347,13,1.347,15,0.687,17,0.687,19,0.24,20,0.814,25,1.029,27,0.814,29,1.041,30,1.313,37,1.159,39,2.018,40,0.068,41,1.209,42,0.585,43,1.237,51,2.199,52,0.745,54,2.124,55,0.939,56,1.416,58,0.967,60,1.159,66,0.578,68,0.292,72,0.701,74,2.053,84,1.443,87,2.357,88,0.252,89,0.24,90,1.81,95,2.328,97,1.591,98,0.967,99,1.81,100,0.716,106,1.81,113,2.966,118,0.292,119,0.687,120,0.687,121,0.687,122,1.02,123,0.415,124,0.858,125,0.415,126,0.528,127,0.415,128,0.194,129,0.95,130,0.617,131,0.415,132,0.194,133,0.415,134,0.411,135,0.415,136,0.194,137,0.415,138,0.024,139,0.024,173,0.856,174,1.159,175,1.041,176,1.805,177,1.805,178,3.385,179,2.681,180,2.969,181,3.782,182,1.805,183,2.681,184,2.681,185,2.681,186,2.681,187,2.102,188,1.805,189,1.591,190,1.805,191,1.092,192,1.092,193,1.805,194,2.102,195,1.092,196,1.416,197,2.776,198,3.54,199,2.053,200,3.198,201,1.805,202,2.681,203,3.782,204,1.159,205,1.159,206,1.416,207,2.681,208,1.092,209,2.681,210,1.805,211,1.416,212,1.416,213,1.805,214,1.092,215,2.508,216,1.092,217,1.805,218,1.805,219,1.092,220,3.385,221,1.805,222,1.805,223,2.102,224,2.102,225,1.092,226,1.527,227,1.805,228,1.092,229,1.805,230,1.092,231,1.092,232,1.805,233,2.308,234,1.805,235,1.092,236,1.092,237,0.856,238,1.092,239,2.969,240,1.092,241,1.092,242,1.416,243,2.308,244,1.092,245,2.969,246,1.805,247,1.416,248,1.092,249,1.092,250,2.308,251,1.805,252,1.092,253,1.092,254,1.092,255,1.092,256,1.092,257,1.092,258,1.092,259,1.092,260,1.81,261,1.805,262,1.721,263,1.81,264,1.805,265,2.308,266,1.092,267,1.092,268,1.092,269,1.805,270,1.805,271,1.092,272,1.092,273,1.092,274,1.092,275,1.092,276,1.092,277,1.092]],["title/components/BoardStatusBarComponent.html",[0,0.103,128,0.443]],["body/components/BoardStatusBarComponent.html",[0,0.181,1,0.467,2,0.702,3,0.702,4,1,5,1,6,1,7,0.467,9,1,12,1.765,13,1.765,15,1.329,17,1.329,19,0.578,25,0.578,30,0.841,40,0.067,52,0.578,55,0.578,58,1.871,66,0.841,68,0.702,88,0.487,89,0.578,100,0.702,118,0.702,119,1.329,120,1.329,121,1.329,122,1.591,123,1,124,1.118,125,1,126,0.467,127,1,128,0.774,129,1.462,130,1.277,131,1,132,0.467,133,1,134,0.467,135,1,136,0.467,137,1,138,0.047,139,0.047,171,2.242,175,1.185,189,2.24,211,2.738,212,2.738,278,2.738,279,2.06,280,3.492,281,3.492,282,3.492,283,4.352,284,2.627]],["title/components/CellComponent.html",[0,0.103,132,0.443]],["body/components/CellComponent.html",[0,0.175,1,0.426,2,0.64,3,0.64,4,0.911,5,0.911,6,0.911,7,0.426,9,0.911,12,1.728,13,1.728,15,1.249,17,1.249,19,0.527,20,1.48,25,0.959,29,1.688,30,1.289,40,0.068,42,1.758,43,1.758,46,2.26,52,0.527,55,0.527,66,1.198,68,0.64,69,1.538,70,1.538,71,1.283,72,1.538,74,2.403,88,0.458,89,0.527,100,0.64,101,3.612,118,0.64,119,1.249,120,1.249,121,1.249,122,1.532,123,0.911,124,1.05,125,0.911,126,0.426,127,0.911,128,0.426,129,0.767,130,0.64,131,0.911,132,0.75,133,0.911,134,0.426,135,0.911,136,0.426,137,0.911,138,0.044,139,0.044,175,1.08,189,2.157,197,2.573,215,3.157,247,1.878,285,1.878,286,3.281,287,3.281,288,4.607,289,3.281,290,2.395,291,2.395,292,2.395]],["title/components/NewGameBtnComponent.html",[0,0.103,134,0.443]],["body/components/NewGameBtnComponent.html",[0,0.175,1,0.425,2,0.639,3,0.639,4,0.909,5,0.909,6,0.909,7,0.425,9,0.909,12,1.727,13,1.727,15,1.247,17,1.247,19,0.526,25,0.526,27,1.478,30,1.049,34,2.258,39,1.478,40,0.067,41,1.078,52,0.526,55,1.072,66,0.765,68,0.639,88,0.457,89,0.526,100,1.267,118,0.639,119,1.247,120,1.247,121,1.247,122,1.531,123,0.909,124,1.049,125,0.909,126,0.425,127,0.909,128,0.425,129,0.765,130,0.639,131,0.909,132,0.425,133,0.909,134,0.75,135,0.909,136,0.425,137,0.909,138,0.044,139,0.044,169,2.4,175,1.078,187,3.305,293,2.932,294,1.874,295,3.276,296,3.276,297,3.276,298,4.022,299,3.154,300,2.569,301,2.569,302,3.276,303,3.154,304,2.39,305,2.39,306,2.569,307,2.39]],["title/classes/Player.html",[25,0.548,88,0.347]],["body/classes/Player.html",[2,0.509,3,0.509,7,0.339,19,0.419,20,1.638,25,1.046,27,1.258,29,0.859,30,1.397,36,1.79,37,1.79,39,1.638,40,0.068,41,1.258,46,2.378,51,2.165,52,0.942,54,1.494,58,2.638,84,0.859,88,0.507,89,0.419,98,1.02,124,1.456,138,0.037,139,0.037,144,1.258,194,3.356,199,2.921,204,1.79,205,1.79,206,1.493,224,3.706,242,1.493,262,1.79,308,1.493,309,4.75,310,4.279,311,3.356,312,3.632,313,2.788,314,2.788,315,2.788,316,1.904,317,2.788,318,2.788,319,1.904,320,1.904,321,1.904,322,1.904,323,1.904,324,2.788,325,2.788,326,2.788,327,1.904,328,2.788,329,1.904,330,2.788,331,2.788,332,1.904,333,1.904,334,1.904]],["title/components/PlayerComponent.html",[0,0.103,136,0.443]],["body/components/PlayerComponent.html",[0,0.169,1,0.342,2,0.887,3,0.514,4,0.732,5,0.732,6,0.732,7,0.342,9,0.732,12,1.633,13,1.633,15,1.069,17,1.069,19,0.424,20,1.646,24,2.603,25,1.047,27,1.267,28,3.044,29,0.868,30,1.298,34,2.08,36,2.343,39,1.497,40,0.068,41,0.868,51,1.505,52,0.855,54,1.505,55,0.855,66,1.062,68,0.514,84,0.868,88,0.509,89,0.424,97,1.031,100,0.751,118,0.514,119,1.069,120,1.069,121,1.069,122,1.389,123,0.732,124,1.298,125,0.732,126,0.342,127,0.732,128,0.342,129,0.616,130,0.514,131,0.732,132,0.342,133,0.732,134,0.342,135,0.732,136,0.649,137,0.732,138,0.038,139,0.038,161,1.235,174,1.804,175,1.497,189,2.08,196,1.508,199,2.131,204,1.235,205,1.235,223,2.203,226,1.267,237,1.508,299,2.862,300,2.203,301,2.203,303,2.862,306,2.203,311,2.203,335,1.508,336,2.809,337,2.809,338,3.65,339,3.65,340,1.923,341,3.65,342,1.923,343,2.809,344,1.923,345,1.923,346,1.923,347,1.923,348,3.65,349,1.923,350,3.319,351,1.923,352,1.923,353,1.923,354,1.923,355,1.923,356,1.923,357,1.923,358,1.923,359,1.923,360,1.923,361,2.809]],["title/coverage.html",[362,2.64]],["body/coverage.html",[0,0.195,1,0.558,7,0.558,8,2.46,25,0.691,40,0.066,52,0.691,55,0.862,84,1.766,88,0.438,100,0.838,114,2.014,126,0.558,128,0.558,130,1.046,132,0.558,134,0.558,136,0.558,138,0.053,139,0.053,169,2.014,171,2.014,173,2.46,278,2.46,279,2.46,285,2.46,293,2.46,294,2.46,308,2.46,335,2.46,362,2.46,363,3.137,364,3.137,365,3.137,366,3.137,367,3.137,368,3.137,369,3.137,370,3.137,371,3.137,372,3.137,373,3.137,374,3.137,375,3.137,376,3.137,377,3.137,378,3.137,379,2.46,380,2.514,381,3.07,382,3.915,383,2.46,384,3.137,385,3.137]],["title/dependencies.html",[142,1.346,386,2.09]],["body/dependencies.html",[40,0.068,46,1.686,68,0.841,69,2.02,70,2.02,71,2.102,78,2.467,138,0.053,139,0.053,142,1.419,144,1.419,154,3.076,155,2.518,161,2.02,163,2.467,164,2.467,387,4.887,388,3.146,389,3.146,390,3.146,391,3.146,392,3.146,393,3.146,394,3.146,395,3.922,396,3.146,397,3.146,398,3.146,399,3.146,400,3.146,401,3.146,402,3.146,403,2.467,404,3.146,405,3.146,406,3.146,407,3.146,408,3.146,409,3.146,410,3.146]],["title/index.html",[19,0.46,226,0.943,411,1.639]],["body/index.html",[40,0.064,55,0.723,59,3.159,60,2.109,61,2.576,62,2.576,63,2.576,115,2.576,138,0.054,139,0.054,142,1.482,144,1.482,174,2.109,226,1.482,262,2.109,403,3.656,412,3.285,413,3.285,414,3.285,415,3.285,416,3.285,417,3.285,418,3.285,419,3.285,420,4.358,421,3.285,422,3.285,423,3.285,424,3.285,425,3.285,426,3.285,427,4.745,428,2.576,429,3.285,430,4.358,431,3.285,432,3.285,433,2.576,434,2.109]],["title/license.html",[226,0.943,411,1.639,434,1.342]],["body/license.html",[7,0.523,34,1.575,40,0.05,114,1.887,116,2.304,117,2.304,138,0.05,139,0.05,145,1.887,151,1.887,260,2.304,433,2.304,434,1.887,435,4.142,436,2.938,437,2.938,438,2.938,439,2.938,440,3.757,441,2.938,442,2.938,443,2.938,444,2.938,445,3.757,446,2.938,447,4.365,448,4.796,449,2.938,450,3.757,451,4.142,452,2.938,453,4.142,454,3.757,455,2.938,456,3.757,457,2.938,458,2.938,459,2.938,460,2.938,461,2.938,462,2.938,463,2.938,464,2.938,465,2.938,466,2.938,467,2.938,468,2.938,469,3.757,470,3.757,471,2.938,472,2.938,473,3.757,474,2.938,475,2.938,476,2.938,477,2.938,478,2.938,479,2.938,480,2.938,481,2.938,482,2.938,483,2.938,484,2.938,485,2.938,486,2.938,487,2.938,488,2.938,489,2.938,490,2.938,491,2.938,492,2.938,493,2.938,494,2.938]],["title/modules.html",[140,1.519]],["body/modules.html",[40,0.059,71,2.058,138,0.059,139,0.059,140,1.732,141,2.058,155,2.466,495,3.84,496,3.84]],["title/overview.html",[497,2.64]],["body/overview.html",[0,0.133,1,0.85,40,0.065,87,2.541,88,0.445,89,0.703,118,0.853,126,0.765,128,0.765,132,0.765,134,0.765,136,0.765,138,0.053,139,0.053,140,1.785,141,2.678,142,1.439,143,2.502,144,1.439,145,2.049,146,2.502,147,2.502,148,2.502,149,3.103,150,2.502,151,2.049,263,2.502,497,2.502]],["title/miscellaneous/variables.html",[380,1.915,498,1.639]],["body/miscellaneous/variables.html",[19,0.769,40,0.067,42,2.24,43,2.24,52,0.921,97,1.871,98,1.871,138,0.056,139,0.056,379,2.738,380,2.241,381,3.775,383,2.738,428,3.278,498,2.738,499,3.491,500,3.491,501,4.638]]],"invertedIndex":[["",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"classes/Player.html":{},"components/PlayerComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"classes/Player.html":{},"components/PlayerComponent.html":{},"coverage.html":{}}}],["0.1.1",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["0.3.6",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["0.8.19",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":382,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"overview.html":{}}}],["1'",{"_index":222,"title":{},"body":{"components/BoardComponent.html":{}}}],["1.2.2",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["1.4.4",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":417,"title":{},"body":{"index.html":{}}}],["1.svg",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["1/2",{"_index":368,"title":{},"body":{"coverage.html":{}}}],["13/15",{"_index":370,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{}}}],["2.4.1",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["2.svg",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["2/3",{"_index":374,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":437,"title":{},"body":{"license.html":{}}}],["3",{"_index":261,"title":{},"body":{"components/BoardComponent.html":{}}}],["3.3.1",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":262,"title":{},"body":{"components/BoardComponent.html":{},"classes/Player.html":{},"index.html":{}}}],["4.1.3",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"index.html":{}}}],["5.2.0",{"_index":387,"title":{},"body":{"dependencies.html":{}}}],["5.5.6",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["5/7",{"_index":376,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":367,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":263,"title":{},"body":{"components/BoardComponent.html":{},"overview.html":{}}}],["6.4.0",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":264,"title":{},"body":{"components/BoardComponent.html":{}}}],["7/9",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":375,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":265,"title":{},"body":{"components/BoardComponent.html":{}}}],["8/10",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":369,"title":{},"body":{"coverage.html":{}}}],["abov",{"_index":468,"title":{},"body":{"license.html":{}}}],["action",{"_index":489,"title":{},"body":{"license.html":{}}}],["actual_compon",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["add",{"_index":324,"title":{},"body":{"classes/Player.html":{}}}],["addwin",{"_index":312,"title":{},"body":{"classes/Player.html":{}}}],["and/or",{"_index":462,"title":{},"body":{"license.html":{}}}],["angular",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["angular/anim",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["angular/common",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"components/PlayerComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["angular5",{"_index":412,"title":{},"body":{"index.html":{}}}],["anim",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["animate('500m",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["animateboardin",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["app.compon",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["appmodul",{"_index":141,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["aris",{"_index":493,"title":{},"body":{"license.html":{}}}],["array",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{}}}],["array(9).fill(nul",{"_index":233,"title":{},"body":{"components/BoardComponent.html":{}}}],["assets/010",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["assets/011",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["associ",{"_index":449,"title":{},"body":{"license.html":{}}}],["author",{"_index":482,"title":{},"body":{"license.html":{}}}],["bar",{"_index":280,"title":{},"body":{"components/BoardStatusBarComponent.html":{}}}],["bar'},{'nam",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["bar.compon",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.css",{"_index":281,"title":{},"body":{"components/BoardStatusBarComponent.html":{}}}],["bar.component.html",{"_index":282,"title":{},"body":{"components/BoardStatusBarComponent.html":{}}}],["bar.component.t",{"_index":279,"title":{},"body":{"components/BoardStatusBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:17",{"_index":284,"title":{},"body":{"components/BoardStatusBarComponent.html":{}}}],["bar/board",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"components/BoardStatusBarComponent.html":{},"coverage.html":{}}}],["board",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["board'},{'nam",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["board.component.css",{"_index":176,"title":{},"body":{"components/BoardComponent.html":{}}}],["board.component.html",{"_index":177,"title":{},"body":{"components/BoardComponent.html":{}}}],["board/board.compon",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["boardcompon",{"_index":126,"title":{"components/BoardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["boardstatusbar",{"_index":213,"title":{},"body":{"components/BoardComponent.html":{}}}],["boardstatusbarcompon",{"_index":128,"title":{"components/BoardStatusBarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["book",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["boolean",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"classes/Player.html":{},"components/PlayerComponent.html":{}}}],["bootstrap",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"classes/Player.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["both",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["brows",{"_index":496,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":295,"title":{},"body":{"components/NewGameBtnComponent.html":{}}}],["btn'},{'name",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["btn.compon",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["btn.component.css",{"_index":296,"title":{},"body":{"components/NewGameBtnComponent.html":{}}}],["btn.component.html",{"_index":297,"title":{},"body":{"components/NewGameBtnComponent.html":{}}}],["btn.component.t",{"_index":294,"title":{},"body":{"components/NewGameBtnComponent.html":{},"coverage.html":{}}}],["btn.component.ts:17",{"_index":304,"title":{},"body":{"components/NewGameBtnComponent.html":{}}}],["btn.component.ts:24",{"_index":305,"title":{},"body":{"components/NewGameBtnComponent.html":{}}}],["btn/new",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"components/NewGameBtnComponent.html":{},"coverage.html":{}}}],["build",{"_index":420,"title":{},"body":{"index.html":{}}}],["c",{"_index":436,"title":{},"body":{"license.html":{}}}],["cell",{"_index":215,"title":{},"body":{"components/BoardComponent.html":{},"components/CellComponent.html":{}}}],["cell'},{'nam",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["cell.component.css",{"_index":286,"title":{},"body":{"components/CellComponent.html":{}}}],["cell.component.html",{"_index":287,"title":{},"body":{"components/CellComponent.html":{}}}],["cell/cell.compon",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["cellcompon",{"_index":132,"title":{"components/CellComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chang",{"_index":201,"title":{},"body":{"components/BoardComponent.html":{}}}],["charg",{"_index":444,"title":{},"body":{"license.html":{}}}],["check",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{}}}],["checkgam",{"_index":182,"title":{},"body":{"components/BoardComponent.html":{}}}],["checkgame(posit",{"_index":193,"title":{},"body":{"components/BoardComponent.html":{}}}],["claim",{"_index":485,"title":{},"body":{"license.html":{}}}],["class",{"_index":88,"title":{"classes/Player.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"classes/Player.html":{},"components/PlayerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cli",{"_index":415,"title":{},"body":{"index.html":{}}}],["cluster_appmodul",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["color",{"_index":317,"title":{},"body":{"classes/Player.html":{}}}],["colorclass",{"_index":310,"title":{},"body":{"classes/Player.html":{}}}],["column",{"_index":267,"title":{},"body":{"components/BoardComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["condit",{"_index":260,"title":{},"body":{"components/BoardComponent.html":{},"license.html":{}}}],["connect",{"_index":494,"title":{},"body":{"license.html":{}}}],["const",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CellComponent.html":{},"classes/Player.html":{},"components/PlayerComponent.html":{}}}],["constructor(fb",{"_index":340,"title":{},"body":{"components/PlayerComponent.html":{}}}],["constructor(nam",{"_index":314,"title":{},"body":{"classes/Player.html":{}}}],["constructor(priv",{"_index":355,"title":{},"body":{"components/PlayerComponent.html":{}}}],["contract",{"_index":490,"title":{},"body":{"license.html":{}}}],["control",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["copi",{"_index":447,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":435,"title":{},"body":{"license.html":{}}}],["core",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":236,"title":{},"body":{"components/BoardComponent.html":{}}}],["coverag",{"_index":362,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["damag",{"_index":486,"title":{},"body":{"license.html":{}}}],["data",{"_index":325,"title":{},"body":{"classes/Player.html":{}}}],["deal",{"_index":450,"title":{},"body":{"license.html":{}}}],["declar",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CellComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"classes/Player.html":{},"components/PlayerComponent.html":{}}}],["demo",{"_index":419,"title":{},"body":{"index.html":{}}}],["depend",{"_index":142,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["descript",{"_index":206,"title":{},"body":{"components/BoardComponent.html":{},"classes/Player.html":{}}}],["determin",{"_index":234,"title":{},"body":{"components/BoardComponent.html":{}}}],["diagon",{"_index":268,"title":{},"body":{"components/BoardComponent.html":{}}}],["direct",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["display",{"_index":212,"title":{},"body":{"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{}}}],["distribut",{"_index":460,"title":{},"body":{"license.html":{}}}],["document",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"license.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["done",{"_index":274,"title":{},"body":{"components/BoardComponent.html":{}}}],["dynam",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":431,"title":{},"body":{"index.html":{}}}],["e2elic",{"_index":432,"title":{},"body":{"index.html":{}}}],["element",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["emit",{"_index":306,"title":{},"body":{"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["emmit",{"_index":300,"title":{},"body":{"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["encapsul",{"_index":10,"title":{},"body":{"components/AppComponent.html":{}}}],["end",{"_index":200,"title":{},"body":{"components/BoardComponent.html":{}}}],["enter",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["environ",{"_index":381,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{},"license.html":{}}}],["eventemitt",{"_index":303,"title":{},"body":{"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["export",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"classes/Player.html":{},"components/PlayerComponent.html":{},"overview.html":{}}}],["express",{"_index":475,"title":{},"body":{"license.html":{}}}],["fabook",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["facircl",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["facirclenotch",{"_index":288,"title":{},"body":{"components/CellComponent.html":{}}}],["facod",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["faheart",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["fals",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"classes/Player.html":{},"miscellaneous/variables.html":{}}}],["fatim",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/CellComponent.html":{}}}],["fatimes/facircl",{"_index":328,"title":{},"body":{"classes/Player.html":{}}}],["fb",{"_index":343,"title":{},"body":{"components/PlayerComponent.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"classes/Player.html":{},"components/PlayerComponent.html":{},"coverage.html":{},"license.html":{}}}],["fit",{"_index":478,"title":{},"body":{"license.html":{}}}],["follow",{"_index":467,"title":{},"body":{"license.html":{}}}],["fontawesom",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fontawesomemodul",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["form",{"_index":350,"title":{},"body":{"components/PlayerComponent.html":{}}}],["formbuild",{"_index":341,"title":{},"body":{"components/PlayerComponent.html":{}}}],["formgroup",{"_index":348,"title":{},"body":{"components/PlayerComponent.html":{}}}],["formsmodul",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["fortawesome/angular",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesom",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/fre",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/CellComponent.html":{},"dependencies.html":{}}}],["free",{"_index":443,"title":{},"body":{"license.html":{}}}],["furnish",{"_index":465,"title":{},"body":{"license.html":{}}}],["game",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{},"coverage.html":{},"index.html":{}}}],["gamepad",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["gamereadi",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/PlayerComponent.html":{}}}],["gamestatusmessag",{"_index":183,"title":{},"body":{"components/BoardComponent.html":{}}}],["gener",{"_index":414,"title":{},"body":{"index.html":{}}}],["get",{"_index":411,"title":{"index.html":{},"license.html":{}},"body":{}}],["grant",{"_index":442,"title":{},"body":{"license.html":{}}}],["gurka",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["heart",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["herebi",{"_index":441,"title":{},"body":{"license.html":{}}}],["holder",{"_index":483,"title":{},"body":{"license.html":{}}}],["hot",{"_index":424,"title":{},"body":{"index.html":{}}}],["html",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["icon",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/CellComponent.html":{},"classes/Player.html":{},"dependencies.html":{}}}],["identifi",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["imag",{"_index":318,"title":{},"body":{"classes/Player.html":{}}}],["implement",{"_index":174,"title":{},"body":{"components/BoardComponent.html":{},"components/PlayerComponent.html":{},"index.html":{}}}],["impli",{"_index":476,"title":{},"body":{"license.html":{}}}],["import",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["includ",{"_index":453,"title":{},"body":{"license.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"classes/Player.html":{},"components/PlayerComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"classes/Player.html":{},"components/PlayerComponent.html":{}}}],["inform",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"classes/Player.html":{},"components/PlayerComponent.html":{}}}],["initi",{"_index":356,"title":{},"body":{"components/PlayerComponent.html":{}}}],["input",{"_index":189,"title":{},"body":{"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/PlayerComponent.html":{}}}],["instal",{"_index":422,"title":{},"body":{"index.html":{}}}],["isgameend",{"_index":184,"title":{},"body":{"components/BoardComponent.html":{}}}],["isplayer1turn",{"_index":178,"title":{},"body":{"components/BoardComponent.html":{}}}],["isreadi",{"_index":311,"title":{},"body":{"classes/Player.html":{},"components/PlayerComponent.html":{}}}],["iswin",{"_index":185,"title":{},"body":{"components/BoardComponent.html":{}}}],["it'",{"_index":198,"title":{},"body":{"components/BoardComponent.html":{}}}],["jo",{"_index":438,"title":{},"body":{"license.html":{}}}],["jqueri",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["júnior",{"_index":439,"title":{},"body":{"license.html":{}}}],["kind",{"_index":474,"title":{},"body":{"license.html":{}}}],["legend",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{},"overview.html":{}}}],["liabil",{"_index":487,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":484,"title":{},"body":{"license.html":{}}}],["licens",{"_index":434,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":454,"title":{},"body":{"license.html":{}}}],["listen",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["live",{"_index":418,"title":{},"body":{"index.html":{}}}],["localhost:4200",{"_index":426,"title":{},"body":{"index.html":{}}}],["made",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["match",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"classes/Player.html":{},"components/PlayerComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.round(math.random",{"_index":240,"title":{},"body":{"components/BoardComponent.html":{}}}],["merchant",{"_index":477,"title":{},"body":{"license.html":{}}}],["merg",{"_index":458,"title":{},"body":{"license.html":{}}}],["messag",{"_index":211,"title":{},"body":{"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["method",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/NewGameBtnComponent.html":{},"classes/Player.html":{},"components/PlayerComponent.html":{}}}],["minif",{"_index":429,"title":{},"body":{"index.html":{}}}],["miscellan",{"_index":498,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":433,"title":{},"body":{"index.html":{},"license.html":{}}}],["modifi",{"_index":457,"title":{},"body":{"license.html":{}}}],["modul",{"_index":140,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["márcio",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["name",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"classes/Player.html":{},"components/PlayerComponent.html":{}}}],["new",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{},"coverage.html":{}}}],["newgamebtncompon",{"_index":134,"title":{"components/NewGameBtnComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ngmodul",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":237,"title":{},"body":{"components/BoardComponent.html":{},"components/PlayerComponent.html":{}}}],["none",{"_index":209,"title":{},"body":{"components/BoardComponent.html":{}}}],["noninfring",{"_index":481,"title":{},"body":{"license.html":{}}}],["notic",{"_index":469,"title":{},"body":{"license.html":{}}}],["npm",{"_index":403,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["null",{"_index":247,"title":{},"body":{"components/BoardComponent.html":{},"components/CellComponent.html":{}}}],["null).length",{"_index":259,"title":{},"body":{"components/BoardComponent.html":{}}}],["number",{"_index":194,"title":{},"body":{"components/BoardComponent.html":{},"classes/Player.html":{}}}],["object",{"_index":501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obtain",{"_index":446,"title":{},"body":{"license.html":{}}}],["on",{"_index":229,"title":{},"body":{"components/BoardComponent.html":{}}}],["oninit",{"_index":175,"title":{},"body":{"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["onplayersubmit",{"_index":339,"title":{},"body":{"components/PlayerComponent.html":{}}}],["onstartnewgam",{"_index":298,"title":{},"body":{"components/NewGameBtnComponent.html":{}}}],["ooop",{"_index":272,"title":{},"body":{"components/BoardComponent.html":{}}}],["opac",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["option",{"_index":205,"title":{},"body":{"components/BoardComponent.html":{},"classes/Player.html":{},"components/PlayerComponent.html":{}}}],["otherwis",{"_index":492,"title":{},"body":{"license.html":{}}}],["out",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":299,"title":{},"body":{"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["overview",{"_index":497,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":386,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":242,"title":{},"body":{"components/BoardComponent.html":{},"classes/Player.html":{}}}],["paramet",{"_index":204,"title":{},"body":{"components/BoardComponent.html":{},"classes/Player.html":{},"components/PlayerComponent.html":{}}}],["particular",{"_index":479,"title":{},"body":{"license.html":{}}}],["permiss",{"_index":440,"title":{},"body":{"license.html":{}}}],["permit",{"_index":464,"title":{},"body":{"license.html":{}}}],["person",{"_index":445,"title":{},"body":{"license.html":{}}}],["player",{"_index":25,"title":{"classes/Player.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"classes/Player.html":{},"components/PlayerComponent.html":{},"coverage.html":{}}}],["player'",{"_index":202,"title":{},"body":{"components/BoardComponent.html":{}}}],["player.addwin",{"_index":249,"title":{},"body":{"components/BoardComponent.html":{}}}],["player.component.css",{"_index":336,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.component.html",{"_index":337,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player.isreadi",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["player.model",{"_index":351,"title":{},"body":{"components/PlayerComponent.html":{}}}],["player/player.compon",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["player/player.model",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CellComponent.html":{}}}],["player1",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{}}}],["player2",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{}}}],["playercompon",{"_index":136,"title":{"components/PlayerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["playerform",{"_index":338,"title":{},"body":{"components/PlayerComponent.html":{}}}],["playersubmit",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/PlayerComponent.html":{}}}],["portion",{"_index":472,"title":{},"body":{"license.html":{}}}],["posit",{"_index":207,"title":{},"body":{"components/BoardComponent.html":{}}}],["primari",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["product",{"_index":428,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["properli",{"_index":357,"title":{},"body":{"components/PlayerComponent.html":{}}}],["properti",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CellComponent.html":{},"classes/Player.html":{},"components/PlayerComponent.html":{}}}],["provid",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"license.html":{},"overview.html":{}}}],["public",{"_index":309,"title":{},"body":{"classes/Player.html":{}}}],["publish",{"_index":459,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":480,"title":{},"body":{"license.html":{}}}],["randomli",{"_index":221,"title":{},"body":{"components/BoardComponent.html":{}}}],["reactiveformsmodul",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["readi",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"classes/Player.html":{},"components/PlayerComponent.html":{}}}],["readyplay",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["readyplayers.length",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["reload",{"_index":425,"title":{},"body":{"index.html":{}}}],["render",{"_index":232,"title":{},"body":{"components/BoardComponent.html":{}}}],["request",{"_index":302,"title":{},"body":{"components/NewGameBtnComponent.html":{}}}],["reset",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["restrict",{"_index":452,"title":{},"body":{"license.html":{}}}],["result",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"classes/Player.html":{},"components/PlayerComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/NewGameBtnComponent.html":{},"classes/Player.html":{},"components/PlayerComponent.html":{}}}],["right",{"_index":455,"title":{},"body":{"license.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["row",{"_index":266,"title":{},"body":{"components/BoardComponent.html":{}}}],["run",{"_index":427,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["scenario",{"_index":218,"title":{},"body":{"components/BoardComponent.html":{}}}],["secondari",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["select",{"_index":197,"title":{},"body":{"components/BoardComponent.html":{},"components/CellComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["sell",{"_index":463,"title":{},"body":{"license.html":{}}}],["serv",{"_index":423,"title":{},"body":{"index.html":{}}}],["set",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"classes/Player.html":{}}}],["setsign",{"_index":313,"title":{},"body":{"classes/Player.html":{}}}],["setsign(sign",{"_index":326,"title":{},"body":{"classes/Player.html":{}}}],["setup",{"_index":421,"title":{},"body":{"index.html":{}}}],["shall",{"_index":470,"title":{},"body":{"license.html":{}}}],["show",{"_index":210,"title":{},"body":{"components/BoardComponent.html":{}}}],["shownewgamebtn",{"_index":179,"title":{},"body":{"components/BoardComponent.html":{}}}],["sign",{"_index":224,"title":{},"body":{"components/BoardComponent.html":{},"classes/Player.html":{}}}],["softwar",{"_index":448,"title":{},"body":{"license.html":{}}}],["solid",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CellComponent.html":{},"dependencies.html":{}}}],["sort",{"_index":220,"title":{},"body":{"components/BoardComponent.html":{}}}],["sortturn",{"_index":186,"title":{},"body":{"components/BoardComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"classes/Player.html":{},"components/PlayerComponent.html":{}}}],["squar",{"_index":180,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/.../environment.prod.t",{"_index":499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:38",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:42",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:46",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:50",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:54",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:58",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:73",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/board",{"_index":278,"title":{},"body":{"components/BoardStatusBarComponent.html":{},"coverage.html":{}}}],["src/app/board/board.component.t",{"_index":173,"title":{},"body":{"components/BoardComponent.html":{},"coverage.html":{}}}],["src/app/board/board.component.ts:110",{"_index":228,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:127",{"_index":214,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:136",{"_index":216,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:158",{"_index":208,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:18",{"_index":191,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:23",{"_index":192,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:28",{"_index":235,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:33",{"_index":231,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:38",{"_index":230,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:43",{"_index":190,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:63",{"_index":219,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:76",{"_index":195,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:97",{"_index":225,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/cell/cell.component.t",{"_index":285,"title":{},"body":{"components/CellComponent.html":{},"coverage.html":{}}}],["src/app/cell/cell.component.ts:18",{"_index":290,"title":{},"body":{"components/CellComponent.html":{}}}],["src/app/cell/cell.component.ts:23",{"_index":291,"title":{},"body":{"components/CellComponent.html":{}}}],["src/app/cell/cell.component.ts:28",{"_index":289,"title":{},"body":{"components/CellComponent.html":{}}}],["src/app/new",{"_index":293,"title":{},"body":{"components/NewGameBtnComponent.html":{},"coverage.html":{}}}],["src/app/player/player.component.t",{"_index":335,"title":{},"body":{"components/PlayerComponent.html":{},"coverage.html":{}}}],["src/app/player/player.component.ts:19",{"_index":346,"title":{},"body":{"components/PlayerComponent.html":{}}}],["src/app/player/player.component.ts:24",{"_index":345,"title":{},"body":{"components/PlayerComponent.html":{}}}],["src/app/player/player.component.ts:29",{"_index":344,"title":{},"body":{"components/PlayerComponent.html":{}}}],["src/app/player/player.component.ts:34",{"_index":349,"title":{},"body":{"components/PlayerComponent.html":{}}}],["src/app/player/player.component.ts:41",{"_index":347,"title":{},"body":{"components/PlayerComponent.html":{}}}],["src/app/player/player.component.ts:46",{"_index":342,"title":{},"body":{"components/PlayerComponent.html":{}}}],["src/app/player/player.model.t",{"_index":308,"title":{},"body":{"classes/Player.html":{},"coverage.html":{}}}],["src/app/player/player.model.ts:11",{"_index":322,"title":{},"body":{"classes/Player.html":{}}}],["src/app/player/player.model.ts:16",{"_index":321,"title":{},"body":{"classes/Player.html":{}}}],["src/app/player/player.model.ts:21",{"_index":319,"title":{},"body":{"classes/Player.html":{}}}],["src/app/player/player.model.ts:26",{"_index":316,"title":{},"body":{"classes/Player.html":{}}}],["src/app/player/player.model.ts:31",{"_index":315,"title":{},"body":{"classes/Player.html":{}}}],["src/app/player/player.model.ts:47",{"_index":323,"title":{},"body":{"classes/Player.html":{}}}],["src/app/player/player.model.ts:57",{"_index":327,"title":{},"body":{"classes/Player.html":{}}}],["src/app/player/player.model.ts:6",{"_index":320,"title":{},"body":{"classes/Player.html":{}}}],["src/environments/environment.prod.t",{"_index":379,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":383,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":226,"title":{"index.html":{},"license.html":{}},"body":{"components/BoardComponent.html":{},"components/PlayerComponent.html":{},"index.html":{}}}],["startnewgam",{"_index":187,"title":{},"body":{"components/BoardComponent.html":{},"components/NewGameBtnComponent.html":{}}}],["state",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CellComponent.html":{}}}],["statement",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{},"coverage.html":{}}}],["statusmessag",{"_index":283,"title":{},"body":{"components/BoardStatusBarComponent.html":{}}}],["string",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"classes/Player.html":{}}}],["style",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["style({transform",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["subject",{"_index":466,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":461,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":471,"title":{},"body":{"license.html":{}}}],["support",{"_index":495,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/CellComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["tabl",{"_index":385,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":384,"title":{},"body":{"coverage.html":{}}}],["tac",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["test",{"_index":430,"title":{},"body":{"index.html":{}}}],["tether",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["this.colorclass",{"_index":333,"title":{},"body":{"classes/Player.html":{}}}],["this.fb.group",{"_index":359,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.gamereadi",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["this.icon",{"_index":332,"title":{},"body":{"classes/Player.html":{}}}],["this.isgameend",{"_index":251,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.isplayer1turn",{"_index":239,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.isreadi",{"_index":334,"title":{},"body":{"classes/Player.html":{}}}],["this.iswin",{"_index":248,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.nam",{"_index":329,"title":{},"body":{"classes/Player.html":{}}}],["this.play",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["this.player.isreadi",{"_index":353,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.player1",{"_index":243,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.player1.nam",{"_index":276,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.player1.setsign('facircl",{"_index":256,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.player1.setsign('fatim",{"_index":254,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.player2",{"_index":244,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.player2.name}'",{"_index":277,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.player2.setsign('facircl",{"_index":255,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.player2.setsign('fatim",{"_index":257,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.playerform",{"_index":358,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.playerform.valid",{"_index":352,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.players.filter((play",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["this.playersubmitted.emit",{"_index":354,"title":{},"body":{"components/PlayerComponent.html":{}}}],["this.shownewgamebtn",{"_index":250,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.sign",{"_index":331,"title":{},"body":{"classes/Player.html":{}}}],["this.sortturn",{"_index":253,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.squar",{"_index":252,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.squares.filter((squar",{"_index":258,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.squares[condition[0",{"_index":269,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.squares[condition[1",{"_index":270,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.squares[condition[2",{"_index":271,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.squares[posit",{"_index":246,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.startnewgam",{"_index":238,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.startnewgame.emit",{"_index":307,"title":{},"body":{"components/NewGameBtnComponent.html":{}}}],["this.stat",{"_index":292,"title":{},"body":{"components/CellComponent.html":{}}}],["this.updatesign(this.isplayer1turn",{"_index":241,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.win",{"_index":330,"title":{},"body":{"classes/Player.html":{}}}],["this.winn",{"_index":245,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.winner.nam",{"_index":275,"title":{},"body":{"components/BoardComponent.html":{}}}],["tic",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["tictacto",{"_index":413,"title":{},"body":{"index.html":{}}}],["titl",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["toe",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["tort",{"_index":491,"title":{},"body":{"license.html":{}}}],["transit",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["translatey(0",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["translatey(100",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["trigger",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["true",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/PlayerComponent.html":{},"miscellaneous/variables.html":{}}}],["true/fals",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["turn",{"_index":203,"title":{},"body":{"components/BoardComponent.html":{}}}],["type",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"classes/Player.html":{},"components/PlayerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updat",{"_index":223,"title":{},"body":{"components/BoardComponent.html":{},"components/PlayerComponent.html":{}}}],["updatesign",{"_index":188,"title":{},"body":{"components/BoardComponent.html":{}}}],["updatesign(isplayer1turn",{"_index":227,"title":{},"body":{"components/BoardComponent.html":{}}}],["us",{"_index":456,"title":{},"body":{"license.html":{}}}],["user",{"_index":301,"title":{},"body":{"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["valid",{"_index":196,"title":{},"body":{"components/BoardComponent.html":{},"components/PlayerComponent.html":{}}}],["validators.requir",{"_index":360,"title":{},"body":{"components/PlayerComponent.html":{}}}],["valu",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CellComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/BoardStatusBarComponent.html":{},"components/CellComponent.html":{},"components/NewGameBtnComponent.html":{},"components/PlayerComponent.html":{}}}],["variabl",{"_index":380,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":416,"title":{},"body":{"index.html":{}}}],["viewencapsul",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["viewencapsulation.non",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/NewGameBtnComponent.html":{},"classes/Player.html":{},"components/PlayerComponent.html":{}}}],["wait",{"_index":361,"title":{},"body":{"components/PlayerComponent.html":{}}}],["warranti",{"_index":473,"title":{},"body":{"license.html":{}}}],["well",{"_index":273,"title":{},"body":{"components/BoardComponent.html":{}}}],["whether",{"_index":488,"title":{},"body":{"license.html":{}}}],["win",{"_index":199,"title":{},"body":{"components/BoardComponent.html":{},"classes/Player.html":{},"components/PlayerComponent.html":{}}}],["win'",{"_index":217,"title":{},"body":{"components/BoardComponent.html":{}}}],["winner",{"_index":181,"title":{},"body":{"components/BoardComponent.html":{}}}],["without",{"_index":451,"title":{},"body":{"license.html":{}}}],["zone.j",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faBook\n                            \n                            \n                                faCode\n                            \n                            \n                                faHeart\n                            \n                            \n                                gameReady\n                            \n                            \n                                players\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                playerSubmitted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:73\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playerSubmitted\n                            \n                            \n                        \n                    \n                \n                \n                    \nplayerSubmitted()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Listener to the playerSubmitted event and if both players are ready to set the gameReady property to true/false\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faBook\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faBook:     \n\n                    \n                \n                    \n                        \n                            Default value : faBook\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:50\n                            \n                        \n\n                \n                    \n                        Book Icon\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faCode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faCode:     \n\n                    \n                \n                    \n                        \n                            Default value : faCode\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:42\n                            \n                        \n\n                \n                    \n                        Code Icon\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faHeart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faHeart:     \n\n                    \n                \n                    \n                        \n                            Default value : faHeart\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:46\n                            \n                        \n\n                \n                    \n                        Heart Icon\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gameReady\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gameReady:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:58\n                            \n                        \n\n                \n                    \n                        Inform if the game is ready or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            players\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        players:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:54\n                            \n                        \n\n                \n                    \n                        Array of players\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Angular 5 tic-tac-toe'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:38\n                            \n                        \n\n                \n                    \n                        Title of the application\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewEncapsulation } from '@angular/core';\nimport { faCode, faHeart, faBook } from '@fortawesome/free-solid-svg-icons';\nimport { Player } from './player/player.model';\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition\n} from '@angular/animations';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger(\n      'animateBoardIn',\n      [\n        transition(\n        ':enter', [\n          style({transform: 'translateY(100%)', opacity: 0}),\n          animate('500ms', style({transform: 'translateY(0)', 'opacity': 1}))\n        ]\n      )]\n    )\n  ]\n})\n\n/**\n * The App Component Class\n */\nexport class AppComponent {\n  /**\n   *   Title of the application\n   */\n  title = 'Angular 5 tic-tac-toe';\n  /**\n   *   Code Icon\n   */\n  faCode = faCode;\n  /**\n   *   Heart Icon\n   */\n  faHeart = faHeart;\n  /**\n   *   Book Icon\n   */\n  faBook = faBook;\n  /**\n   *   Array of players\n   */\n  players: Array;\n  /**\n   *   Inform if the game is ready or not\n   */\n  gameReady: boolean;\n\n  /**\n   * Listener to the `playerSubmitted` event and if both players are ready to set the `gameReady` property to true/false\n   *\n   * @returns {}\n   */\n\n  playerSubmitted() {\n    const readyPlayers = this.players.filter((player: Player) => player.isReady);\n    if (readyPlayers.length === 2) {\n      this.gameReady = true;\n    } else {\n      this.gameReady = false;\n    }\n  }\n\n  constructor() {\n    const player1 = new Player('', 0, 'faTimes', 'primary', 'assets/011-game-controller-1.svg');\n    const player2 = new Player('', 0, 'faCircle', 'secondary', 'assets/010-gamepad-2.svg');\n    this.players = [player1, player2];\n    this.gameReady = false;\n  }\n}\n\n    \n\n    \n        \n  \n    Angular 5 tic-tac-toe\n    \n     \n   \n    \n      \n        \n            Check the documentation\n        \n        \n            Check the source code\n        \n      \n    \n  \n  \n    \n        \n        \n        \n    \n  \n  \n    Made with   by \n    Márcio Gurka\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Angular 5 tic-tac-toe                                          Check the documentation                            Check the source code                                                              Made with   by     Márcio Gurka  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardStatusBarComponent', 'selector': 'app-board-status-bar'},{'name': 'CellComponent', 'selector': 'app-cell'},{'name': 'NewGameBtnComponent', 'selector': 'app-new-game-btn'},{'name': 'PlayerComponent', 'selector': 'app-player'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBoardComponent\n\nBoardComponent\n\nAppModule -->\n\nBoardComponent->AppModule\n\n\n\n\n\nBoardStatusBarComponent\n\nBoardStatusBarComponent\n\nAppModule -->\n\nBoardStatusBarComponent->AppModule\n\n\n\n\n\nCellComponent\n\nCellComponent\n\nAppModule -->\n\nCellComponent->AppModule\n\n\n\n\n\nNewGameBtnComponent\n\nNewGameBtnComponent\n\nAppModule -->\n\nNewGameBtnComponent->AppModule\n\n\n\n\n\nPlayerComponent\n\nPlayerComponent\n\nAppModule -->\n\nPlayerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                BoardComponent\n                            \n                            \n                                BoardStatusBarComponent\n                            \n                            \n                                CellComponent\n                            \n                            \n                                NewGameBtnComponent\n                            \n                            \n                                PlayerComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n\nimport { AppComponent } from './app.component';\nimport { PlayerComponent } from './player/player.component';\nimport { BoardComponent } from './board/board.component';\nimport { CellComponent } from './cell/cell.component';\nimport { NewGameBtnComponent } from './new-game-btn/new-game-btn.component';\nimport { BoardStatusBarComponent } from './board-status-bar/board-status-bar.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PlayerComponent,\n    BoardComponent,\n    CellComponent,\n    NewGameBtnComponent,\n    BoardStatusBarComponent\n  ],\n  imports: [\n    BrowserModule,\n    FontAwesomeModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardComponent.html":{"url":"components/BoardComponent.html","title":"component - BoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/board.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-board\n            \n\n            \n                styleUrls\n                board.component.css\n            \n\n\n\n            \n                templateUrl\n                ./board.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isPlayer1Turn\n                            \n                            \n                                showNewGameBtn\n                            \n                            \n                                squares\n                            \n                            \n                                winner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkGame\n                            \n                            \n                                gameStatusMessage\n                            \n                            \n                                isGameEnded\n                            \n                            \n                                isWin\n                            \n                            \n                                sortTurn\n                            \n                            \n                                startNewGame\n                            \n                            \n                                updateSign\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                player1\n                            \n                            \n                                player2\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/board/board.component.ts:43\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        player1\n                    \n                    \n                        Player 1 info\n\n                            \n                            Type:    Player\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        player2\n                    \n                    \n                        Player 2 info\n\n                            \n                            Type:    Player\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkGame\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckGame(position: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Check if the game is a valid selection,\nthen if it's a player win and if the game is ended,\nif not ended, change player's turn\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        position\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nposition of the board that will be checked\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gameStatusMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngameStatusMessage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:158\n                            \n                        \n\n\n                \n                    \n                            Check if the game is ended and if has a winner, if none are true,\nshows which player's turn is\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The message to be displayed in the BoardStatusBar Component\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isGameEnded\n                            \n                            \n                        \n                    \n                \n                \n                    \nisGameEnded()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:127\n                            \n                        \n\n\n                \n                    \n                            Check if all the cells were selected\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Inform if all the cells were selected\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isWin\n                            \n                            \n                        \n                    \n                \n                \n                    \nisWin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:136\n                            \n                        \n\n\n                \n                    \n                            Check all the win's scenarios and return if it's a win state or none\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Inform if it's a win state or not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortTurn\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortTurn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Sort randomly if it's a player 1's turn or not,\nthen update the sign of the players\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startNewGame\n                            \n                            \n                        \n                    \n                \n                \n                    \nstartNewGame()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            Set the values of a new game status,\nthen sort which player will start the game\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSign\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSign(isPlayer1Turn: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:110\n                            \n                        \n\n\n                \n                    \n                            Update the sign of the player after sorting which one will start the game\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        isPlayer1Turn\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nInform if the player 1 will start the game or not\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPlayer1Turn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isPlayer1Turn:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:38\n                            \n                        \n\n                \n                    \n                        Inform if its player 1 turn or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showNewGameBtn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showNewGameBtn:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:33\n                            \n                        \n\n                \n                    \n                        Inform if NewGameBtnComponent should be rendered or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            squares\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        squares:     \n\n                    \n                \n                    \n                        \n                            Default value : Array(9).fill(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:43\n                            \n                        \n\n                \n                    \n                        Array of states to inform which player selected a determined cell\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            winner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        winner:     Player\n\n                    \n                \n                    \n                        \n                            Type :     Player\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:28\n                            \n                        \n\n                \n                    \n                        Winner info\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Player } from '../player/player.model';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css']\n})\n\n/**\n * BoardComponent class\n */\nexport class BoardComponent implements OnInit {\n\n  /**\n   * Player 1 info\n   */\n  @Input() player1: Player;\n\n  /**\n   * Player 2 info\n   */\n  @Input() player2: Player;\n\n  /**\n   * Winner info\n   */\n  winner: Player;\n\n  /**\n   * Inform if NewGameBtnComponent should be rendered or not\n   */\n  showNewGameBtn: boolean;\n\n  /**\n   * Inform if its player 1 turn or not\n   */\n  isPlayer1Turn: boolean;\n\n  /**\n   * Array of states to inform which player selected a determined cell\n   */\n  squares = Array(9).fill(null);\n\n  constructor() {\n  }\n\n  /**\n   * Start a new game with correct info\n   *\n   * @returns {}\n   */\n  ngOnInit() {\n    this.startNewGame();\n  }\n\n  /**\n   * Sort randomly if it's a player 1's turn or not,\n   * then update the sign of the players\n   *\n   * @returns {}\n   */\n  sortTurn() {\n    this.isPlayer1Turn = Math.round(Math.random()) === 0;\n    this.updateSign(this.isPlayer1Turn);\n  }\n\n  /**\n   * Check if the game is a valid selection,\n   * then if it's a player win and if the game is ended,\n   * if not ended, change player's turn\n   *\n   * @param  {number} position - position of the board that will be checked\n   * @returns {}\n   */\n  checkGame(position: number) {\n    const player = this.isPlayer1Turn ? this.player1 : this.player2;\n    if (!this.winner && this.squares[position] === null) {\n      this.squares[position] = player;\n      if (this.isWin()) {\n        player.addWin();\n        this.winner = player;\n        this.showNewGameBtn = true;\n      } else if (this.isGameEnded()) {\n        this.showNewGameBtn = true;\n      }\n      this.isPlayer1Turn = !this.isPlayer1Turn;\n    }\n  }\n\n  /**\n   * Set the values of a new game status,\n   * then sort which player will start the game\n   *\n   * @returns {}\n   */\n  startNewGame() {\n    this.squares = Array(9).fill(null);\n    this.winner = null;\n    this.showNewGameBtn = false;\n    this.sortTurn(); // 0 or 1 to sort turn\n  }\n\n  /**\n   * Update the sign of the player after sorting which one will start the game\n   *\n   * @param  {boolean} isPlayer1Turn - Inform if the player 1 will start the game or not\n   * @returns {}\n   */\n  updateSign(isPlayer1Turn: boolean) {\n    if (this.player1 && this.player1) {\n      if (isPlayer1Turn) {\n        this.player1.setSign('faTimes');\n        this.player2.setSign('faCircle');\n      } else {\n        this.player1.setSign('faCircle');\n        this.player2.setSign('faTimes');\n      }\n    }\n  }\n\n  /**\n   * Check if all the cells were selected\n   *\n   * @returns {boolean}  Inform if all the cells were selected\n   */\n  isGameEnded() {\n    return this.squares.filter((square) => square === null).length === 0;\n  }\n\n  /**\n   * Check all the win's scenarios and return if it's a win state or none\n   *\n   * @returns {boolean}  Inform if it's a win state or not\n   */\n  isWin() {\n    const conditions = [\n      [0, 1, 2], [3, 4, 5], [6, 7, 8], // rows\n      [0, 3, 6], [1, 4, 7], [2, 5, 8], // columns\n      [0, 4, 8], [2, 4, 6]             // diagonal\n    ];\n    for (const condition of conditions) {\n        if (this.squares[condition[0]]\n            && this.squares[condition[0]] === this.squares[condition[1]]\n            && this.squares[condition[1]] === this.squares[condition[2]]) {\n              return true;\n        }\n    }\n    return false;\n  }\n\n  /**\n   * Check if the game is ended and if has a winner, if none are true,\n   * shows which player's turn is\n   *\n   * @returns {string}  The message to be displayed in the BoardStatusBar Component\n   */\n  gameStatusMessage() {\n    if (this.isGameEnded() && !this.winner) {\n      return `Ooops! The game has no winner :(`;\n    } else if (this.winner) {\n      return `Well done ${this.winner.name}! You are the winner!`;\n    } else {\n      return `Player ${(this.isPlayer1Turn) ? this.player1.name : this.player2.name}'s turn`;\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n      \n    \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardStatusBarComponent', 'selector': 'app-board-status-bar'},{'name': 'CellComponent', 'selector': 'app-cell'},{'name': 'NewGameBtnComponent', 'selector': 'app-new-game-btn'},{'name': 'PlayerComponent', 'selector': 'app-player'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardStatusBarComponent.html":{"url":"components/BoardStatusBarComponent.html","title":"component - BoardStatusBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoardStatusBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board-status-bar/board-status-bar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-board-status-bar\n            \n\n            \n                styleUrls\n                board-status-bar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./board-status-bar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                statusMessage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        statusMessage\n                    \n                    \n                        The message that will be displayed\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/board-status-bar/board-status-bar.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-board-status-bar',\n  templateUrl: './board-status-bar.component.html',\n  styleUrls: ['./board-status-bar.component.css']\n})\n\n/**\n * BoardStatusBarComponent class\n */\nexport class BoardStatusBarComponent {\n\n  /**\n   *   The message that will be displayed\n   */\n  @Input() statusMessage: string;\n}\n\n    \n\n    \n        \n  {{ statusMessage }}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ statusMessage }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardStatusBarComponent', 'selector': 'app-board-status-bar'},{'name': 'CellComponent', 'selector': 'app-cell'},{'name': 'NewGameBtnComponent', 'selector': 'app-new-game-btn'},{'name': 'PlayerComponent', 'selector': 'app-player'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BoardStatusBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CellComponent.html":{"url":"components/CellComponent.html","title":"component - CellComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CellComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/cell/cell.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cell\n            \n\n            \n                styleUrls\n                cell.component.css\n            \n\n\n\n            \n                templateUrl\n                ./cell.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faCircleNotch\n                            \n                            \n                                faTimes\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/cell/cell.component.ts:28\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        state\n                    \n                    \n                        Player that selected the cell\n\n                            \n                            Type:    Player\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/cell/cell.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faCircleNotch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faCircleNotch:     \n\n                    \n                \n                    \n                        \n                            Default value : faCircleNotch\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cell/cell.component.ts:28\n                            \n                        \n\n                \n                    \n                        faCircleNotch icon\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faTimes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faTimes:     \n\n                    \n                \n                    \n                        \n                            Default value : faTimes\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cell/cell.component.ts:23\n                            \n                        \n\n                \n                    \n                        faTimes icon\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { faTimes, faCircleNotch } from '@fortawesome/free-solid-svg-icons';\nimport { Player } from '../player/player.model';\n\n@Component({\n  selector: 'app-cell',\n  templateUrl: './cell.component.html',\n  styleUrls: ['./cell.component.css']\n})\n\n/**\n * CellComponent class\n */\nexport class CellComponent {\n  /**\n   * Player that selected the cell\n   */\n  @Input() state: Player;\n\n  /**\n   * faTimes icon\n   */\n  faTimes = faTimes;\n\n  /**\n   * faCircleNotch icon\n   */\n  faCircleNotch = faCircleNotch;\n\n  constructor() {\n    this.state = null;\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardStatusBarComponent', 'selector': 'app-board-status-bar'},{'name': 'CellComponent', 'selector': 'app-cell'},{'name': 'NewGameBtnComponent', 'selector': 'app-new-game-btn'},{'name': 'PlayerComponent', 'selector': 'app-player'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CellComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewGameBtnComponent.html":{"url":"components/NewGameBtnComponent.html","title":"component - NewGameBtnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NewGameBtnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/new-game-btn/new-game-btn.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-new-game-btn\n            \n\n            \n                styleUrls\n                new-game-btn.component.css\n            \n\n\n\n            \n                templateUrl\n                ./new-game-btn.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onStartNewGame\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                startNewGame\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        startNewGame\n                    \n                    \n                        Event emmited when the user request a new game\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/new-game-btn/new-game-btn.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onStartNewGame\n                            \n                            \n                        \n                    \n                \n                \n                    \nonStartNewGame()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/new-game-btn/new-game-btn.component.ts:24\n                            \n                        \n\n\n                \n                    \n                            Emits the startNewGame event\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-new-game-btn',\n  templateUrl: './new-game-btn.component.html',\n  styleUrls: ['./new-game-btn.component.css']\n})\n\n/**\n * NewGameBtnComponent class\n */\nexport class NewGameBtnComponent {\n\n  /**\n   * Event emmited when the user request a new game\n   */\n  @Output() startNewGame: EventEmitter = new EventEmitter();\n\n  /**\n   * Emits the `startNewGame` event\n   *\n   * @returns {}\n   */\n  onStartNewGame() {\n    this.startNewGame.emit();\n  }\n\n}\n\n    \n\n    \n        \n  New Game\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  New Game'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardStatusBarComponent', 'selector': 'app-board-status-bar'},{'name': 'CellComponent', 'selector': 'app-cell'},{'name': 'NewGameBtnComponent', 'selector': 'app-new-game-btn'},{'name': 'PlayerComponent', 'selector': 'app-player'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewGameBtnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Player.html":{"url":"classes/Player.html","title":"class - Player","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Player\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/player/player.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                colorClass\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                isReady\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                sign\n                            \n                            \n                                    Public\n                                wins\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addWin\n                            \n                            \n                                setSign\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, wins: number, sign: string, colorClass: string, icon: string, isReady: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/player/player.model.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        wins\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sign\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        colorClass\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        icon\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        isReady\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            colorClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colorClass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/player/player.model.ts:26\n                            \n                        \n\n                \n                    \n                        Bootstrap 4 color class of the player\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/player/player.model.ts:31\n                            \n                        \n\n                \n                    \n                        Image of the player\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isReady\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isReady:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/player/player.model.ts:21\n                            \n                        \n\n                \n                    \n                        Inform if the player is ready or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/player/player.model.ts:6\n                            \n                        \n\n                \n                    \n                        Name of the Player\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sign\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sign:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/player/player.model.ts:16\n                            \n                        \n\n                \n                    \n                        Sign of the player\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            wins\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        wins:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/player/player.model.ts:11\n                            \n                        \n\n                \n                    \n                        Number of players wins\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addWin\n                            \n                            \n                        \n                    \n                \n                \n                    \naddWin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/player/player.model.ts:47\n                            \n                        \n\n\n                \n                    \n                            Add a win to the player data\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSign\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSign(sign: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/player/player.model.ts:57\n                            \n                        \n\n\n                \n                    \n                            Set the sign property of the player\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sign\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                : string to the sign Icon name (faTimes/faCircle)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Player {\n\n  /**\n   *   Name of the Player\n   */\n  public name: string;\n\n  /**\n   *   Number of players wins\n   */\n  public wins: number;\n\n  /**\n   *   Sign of the player\n   */\n  public sign: string;\n\n  /**\n   *   Inform if the player is ready or not\n   */\n  public isReady: boolean;\n\n  /**\n   *   Bootstrap 4 color class of the player\n   */\n  public colorClass: string;\n\n  /**\n   *   Image of the player\n   */\n  public icon: string;\n\n  constructor(name: string, wins: number = 0, sign: string, colorClass: string, icon: string, isReady: boolean = false) {\n    this.name = name;\n    this.wins = wins;\n    this.sign = sign;\n    this.icon = icon;\n    this.colorClass = colorClass;\n    this.isReady = isReady;\n  }\n\n  /**\n   * Add a win to the player data\n   *\n   * @returns {}\n   */\n  addWin() {\n    this.wins++;\n  }\n\n  /**\n   * Set the sign property of the player\n   *\n   * @param  {string} sign: string to the sign Icon name (faTimes/faCircle)\n   * @returns {}\n   */\n  setSign(sign: string) {\n    this.sign = sign;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerComponent.html":{"url":"components/PlayerComponent.html","title":"component - PlayerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlayerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/player/player.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-player\n            \n\n            \n                styleUrls\n                player.component.css\n            \n\n\n\n            \n                templateUrl\n                ./player.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                playerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onPlayerSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                gameReady\n                            \n                            \n                                player\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                playerSubmitted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/player/player.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        gameReady\n                    \n                    \n                        Inform if the game is ready or not\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/player/player.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        player\n                    \n                    \n                        Player Class\n\n                            \n                            Type:    Player\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/player/player.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        playerSubmitted\n                    \n                    \n                        Event emmited when the user is ready\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/player/player.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onPlayerSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonPlayerSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/player/player.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Update the player isReady property and emit the playerSubmitted event\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playerForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        playerForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/player/player.component.ts:34\n                            \n                        \n\n                \n                    \n                        Form of the Player info\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Player } from './player.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-player',\n  templateUrl: './player.component.html',\n  styleUrls: ['./player.component.css']\n})\n\n/**\n * Player Component class\n */\nexport class PlayerComponent implements OnInit {\n\n  /**\n   * Event emmited when the user is ready\n   */\n  @Output() playerSubmitted: EventEmitter = new EventEmitter();\n\n  /**\n   * Player Class\n   */\n  @Input() player: Player;\n\n  /**\n   * Inform if the game is ready or not\n   */\n  @Input() gameReady: boolean;\n\n  /**\n   * Form of the Player info\n   */\n  playerForm: FormGroup;\n\n  /**\n   * Update the player `isReady` property and emit the `playerSubmitted` event\n   *\n   * @returns {}\n   */\n  onPlayerSubmit() {\n    if (this.playerForm.valid) {\n      this.player.isReady = true;\n      this.playerSubmitted.emit();\n    }\n  }\n\n  constructor(private fb: FormBuilder) {\n  }\n\n  /**\n   * Initialize the form properly\n   *\n   * @returns {}\n   */\n  ngOnInit() {\n    this.playerForm = this.fb.group({\n      name: ['', [\n        Validators.required,\n      ]],\n      wins: [0, []],\n    });\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        Name:\n        \n          \n        \n      \n      \n        Wins:\n        \n          \n        \n      \n      Start Game\n    \n    \n      Waiting for the other player\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Name:                                              Wins:                                      Start Game              Waiting for the other player      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardStatusBarComponent', 'selector': 'app-board-status-bar'},{'name': 'CellComponent', 'selector': 'app-cell'},{'name': 'NewGameBtnComponent', 'selector': 'app-new-game-btn'},{'name': 'PlayerComponent', 'selector': 'app-player'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlayerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                    src/app/board-status-bar/board-status-bar.component.ts\n            \n            \n                component\n            \n            \n                BoardStatusBarComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/app/board/board.component.ts\n            \n            \n                component\n            \n            \n                BoardComponent\n            \n            \n                86 %\n                (13/15)\n            \n        \n        \n            \n                \n                    src/app/cell/cell.component.ts\n            \n            \n                component\n            \n            \n                CellComponent\n            \n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                    src/app/new-game-btn/new-game-btn.component.ts\n            \n            \n                component\n            \n            \n                NewGameBtnComponent\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    src/app/player/player.component.ts\n            \n            \n                component\n            \n            \n                PlayerComponent\n            \n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                    src/app/player/player.model.ts\n            \n            \n                class\n            \n            \n                Player\n            \n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^5.2.0\n        \n            @angular/common : ^5.2.0\n        \n            @angular/compiler : ^5.2.0\n        \n            @angular/core : ^5.2.0\n        \n            @angular/forms : ^5.2.0\n        \n            @angular/http : ^5.2.0\n        \n            @angular/platform-browser : ^5.2.0\n        \n            @angular/platform-browser-dynamic : ^5.2.0\n        \n            @angular/router : ^5.2.0\n        \n            @fortawesome/angular-fontawesome : ^0.1.1\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.2\n        \n            @fortawesome/free-solid-svg-icons : ^5.2.0\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.4.1\n        \n            i : ^0.3.6\n        \n            jquery : ^3.3.1\n        \n            npm : ^6.4.0\n        \n            rxjs : ^5.5.6\n        \n            tether : ^1.4.4\n        \n            zone.js : ^0.8.19\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nangular5-tictactoe\n\nA Tic-Tac-Toe game made with Angular 5 and Bootstrap 4 generated with Angular CLI version 1.7.4. \n\n\nLive demo\n\nBuild Setup\n# install dependencies\nnpm i\n\n# serve with hot reload at localhost:4200\nnpm run start\n\n# build for production with minification\nnpm run build\n\n# run tests\nnpm run test\n\n# run e2e tests (not implemented yet)\nnpm run e2eLicence\nMIT License\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Márcio José Gurka Júnior\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBoardComponent\n\nBoardComponent\n\nAppModule -->\n\nBoardComponent->AppModule\n\n\n\n\n\nBoardStatusBarComponent\n\nBoardStatusBarComponent\n\nAppModule -->\n\nBoardStatusBarComponent->AppModule\n\n\n\n\n\nCellComponent\n\nCellComponent\n\nAppModule -->\n\nCellComponent->AppModule\n\n\n\n\n\nNewGameBtnComponent\n\nNewGameBtnComponent\n\nAppModule -->\n\nNewGameBtnComponent->AppModule\n\n\n\n\n\nPlayerComponent\n\nPlayerComponent\n\nAppModule -->\n\nPlayerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        6 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
